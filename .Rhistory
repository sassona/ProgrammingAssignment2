install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<x-3
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
mydiv<-z/mysqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
clear
ls
library(swirl)
swirl()
getwd()
ls()
x<9
x<-9
ls
ls()
list.files()
?list.files
arg(list.files)
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.file()
list.files()
file.exists(mytest.R)
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename())
args(file.rename
args(file.rename)
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest2.R")
file.rename("mytest.R","mytest3.R")
file.rename("mytest2.R","mytest3.R")
file.rename("mytest3.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest2.R")
file.path("mytest3.R")
file.path("mytest3.R","folder1","folder2")
file.path(folder1","folder2")
file.path("folder1","folder2")
?dir.create
dir.create(filepath("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
library(datsets)
library(datset)
library(datasets)
data("iris")
?iris
data(iris)
iris
a<-iris[Species="virginica"]
a<-iris[Species="virginica",]
a<-iris[Species="virginica",]
a<-iris[iris$Species="virginica",]
a<-iris[iris$Species = "virginica",]
a<-iris[iris$Species == "virginica",]
View(a)
View(a)
mean[a$Sepal.Length]
View(iris)
a<-iris[Species == "virginica",]
a<-iris[iris$Species == "virginica",]
a<-subset(iris,Species == "virginica")
subset(iris,Species == "virginica")
a<-subset(iris,Species == "virginica")
a
?subset
a<-iris[iris$Species == "virginica",]
View(a)
mean(a)
mean(a$Sepal.Length)
mean(a$Sepal.Length)
a<-iris[iris$Species == "virginica",]
mean(a$Sepal.Length)
apply(iris,2,mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
library(datasets)
data(mtcars)
?mtcars
view(mtcars)
View(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
b<-tapply(mtcars$hp, mtcars$cyl, mean)
b[1]
abs(b[3]-b[1])
debug(ls)
ls
ls
exit
exit
ls
ls
?ls
deb
?debug
setwd("~/ProgrammingAssignment2")
i
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
a<-[c(1,2,3)]
b<-[c(4,5,6)]
a<-c(1,2,3)
a
mean(A)
mean(a)
b<-c(4,5,6)
cachemean(a)
makeVector(a)
cachemean(a)
makeCacheMatrix()
makeCacheMean
makeCacheMean()
makeVector()
cachemean(a)
cachemean(a)
cachemean(a,b)
makeVector(a)
cachemean(a)
ls
source('~/ProgrammingAssignment2/cachematrix.R')
debug(cachemean)
source('~/ProgrammingAssignment2/cachematrix.R')
cachemean(a)
cachemean()
cachemean(a)
debug(makeVector)
makeVector(a)
source('~/ProgrammingAssignment2/cachematrix.R')
debug(cachemean)
cachemean(a)
debug(cachemean)
cachemean(a)
